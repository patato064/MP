==5275== Memcheck, a memory error detector
==5275== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==5275== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==5275== Command: /home/mp/Escritorio/MP/Boston/MiBoston_2/dist/Debug/GNU-Linux/miboston_2
==5275== 
ERROR in boston2 parameters
Run with the following arguments:
boston2 <inputFile.txt> [<outputFile.crm>]

Parameters:
<inputFile.txt>: name of the input text file that contains the names of the crm files
<outputFile.crm>: name of the output crm file (tests/output/output.crm by default)

==5275== Syscall param open(filename) points to unaddressable byte(s)
==5275==    at 0x54C9140: __open_nocancel (syscall-template.S:84)
==5275==    by 0x544BADD: _IO_file_open (fileops.c:221)
==5275==    by 0x544BD44: _IO_file_fopen@@GLIBC_2.2.5 (fileops.c:328)
==5275==    by 0x543FD43: __fopen_internal (iofopen.c:86)
==5275==    by 0x4EEA11F: std::__basic_file<char>::open(char const*, std::_Ios_Openmode, int) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==5275==    by 0x4F2A699: std::basic_filebuf<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==5275==    by 0x4F2A86F: std::basic_ifstream<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==5275==    by 0x40A4D4: main (main.cpp:104)
==5275==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==5275== 
terminate called after throwing an instance of 'std::out_of_range'
  what():  basic_string::at: __n (which is 18446744073709551615) >= this->size() (which is 0)
==5275== 
==5275== Process terminating with default action of signal 6 (SIGABRT)
==5275==    at 0x5407438: raise (raise.c:54)
==5275==    by 0x5409039: abort (abort.c:89)
==5275==    by 0x4EC984C: __gnu_cxx::__verbose_terminate_handler() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==5275==    by 0x4EC76B5: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==5275==    by 0x4EC7700: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==5275==    by 0x4EC7918: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==5275==    by 0x4EF03F6: std::__throw_out_of_range_fmt(char const*, ...) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==5275==    by 0x4F599DE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::at(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==5275==    by 0x407484: CrimeSet::setComment(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (CrimeSet.cpp:43)
==5275==    by 0x40A69F: main (main.cpp:134)
==5275== 
==5275== HEAP SUMMARY:
==5275==     in use at exit: 73,140 bytes in 7 blocks
==5275==   total heap usage: 6,011 allocs, 6,004 frees, 193,816 bytes allocated
==5275== 
==5275== 144 bytes in 1 blocks are possibly lost in loss record 6 of 7
==5275==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5275==    by 0x4EC641F: __cxa_allocate_exception (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==5275==    by 0x4EF03CA: std::__throw_out_of_range_fmt(char const*, ...) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==5275==    by 0x4F599DE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::at(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==5275==    by 0x407484: CrimeSet::setComment(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (CrimeSet.cpp:43)
==5275==    by 0x40A69F: main (main.cpp:134)
==5275== 
==5275== LEAK SUMMARY:
==5275==    definitely lost: 0 bytes in 0 blocks
==5275==    indirectly lost: 0 bytes in 0 blocks
==5275==      possibly lost: 144 bytes in 1 blocks
==5275==    still reachable: 72,996 bytes in 6 blocks
==5275==                       of which reachable via heuristic:
==5275==                         stdstring          : 107 bytes in 1 blocks
==5275==         suppressed: 0 bytes in 0 blocks
==5275== Reachable blocks (those to which a pointer was found) are not shown.
==5275== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==5275== 
==5275== For counts of detected and suppressed errors, rerun with: -v
==5275== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Aborted (core dumped)
